// Generated by CoffeeScript 1.3.3
(function() {
  var add_pane, add_to_chat, channel, chatBox, chatForm, chatInput, connect, connectButton, getUrlVars, messageForm, messageInput, nameForm, nameInput, on_send_message, on_submit_name, sendButton, taskNumber, userName,
    __indexOf = [].indexOf || function(item) { for (var i = 0, l = this.length; i < l; i++) { if (i in this && this[i] === item) return i; } return -1; };

  channel = void 0;

  userName = void 0;

  nameForm = void 0;

  nameInput = void 0;

  connectButton = void 0;

  chatForm = void 0;

  chatInput = void 0;

  sendButton = void 0;

  chatBox = void 0;

  messageForm = void 0;

  messageInput = void 0;

  taskNumber = 0;

  on_submit_name = function(event) {
    var name;
    $('#start').fadeOut();
    name = $('#name_input').val();
    $('.name').text(name);
    if (name !== "") {
      userName = name;
      nameInput.disabled = true;
      connectButton.disabled = true;
      messageInput.disabled = false;
      sendButton.disabled = false;
      messageInput.focus();
      add_pane(name);
      channel.subscribe([
        {
          type: "event_queue",
          name: "users"
        }
      ], 0);
      channel.subscribe([
        {
          type: "event_queue",
          name: "chat"
        }
      ], 0);
      channel.event_queue("users", {
        object: {
          new_user: userName
        }
      });
    }
    $('#name_form').fadeOut();
    $('#panes').fadeIn();
    $('#chat').fadeIn();
    $('#corner').fadeIn();
    $('#key').fadeIn();
    event.preventDefault();
    return false;
  };

  add_pane = function(name) {
    var pane, users;
    users = [];
    $(".pane").each(function() {
      return users.push($(this).data("username"));
    });
    if (__indexOf.call(users, name) < 0) {
      pane = $(document.createElement("div")).addClass("pane").attr("data-username", name);
      $(pane).append($(document.createElement("h1")).text(name));
      if (name === userName) {
        $(pane).addClass('myself');
      }
      return $("#panes").append(pane);
    }
  };

  on_send_message = function(event) {
    if (messageInput.value !== "") {
      channel.event_queue("chat", {
        object: {
          message: messageInput.value,
          user: userName
        }
      });
      messageInput.value = "";
      messageInput.focus();
    }
    event.preventDefault();
    return false;
  };

  connect = function() {
    var client;
    client = {
      connect: function() {
        nameInput.disabled = connectButton.disabled = false;
        return nameInput.focus();
      },
      event_queue: function(name, event) {
        var message, num, r, splitMessage, task, taskDesc, user, _i, _j, _k, _len, _len1, _len2, _ref, _ref1, _ref2;
        if ((name === "chat") && event.object.message) {
          message = event.object.message;
          user = event.object.user;
          _ref = [/^new task*\W/, /^[n]*\W/];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            r = _ref[_i];
            if (message.match(r)) {
              taskNumber += 1;
              splitMessage = message.split(r);
              task = splitMessage[1];
              $('#unassigned').append($(document.createElement("p")).text(taskNumber + ". " + splitMessage[1]).attr('data-num', taskNumber).attr('data-task', splitMessage[1]));
              add_to_chat(user + ' created task: "' + task + '"', 'newtask');
              return;
            }
          }
          _ref1 = [/^starting*\W/, /^[s]*\W/];
          for (_j = 0, _len1 = _ref1.length; _j < _len1; _j++) {
            r = _ref1[_j];
            if (message.match(r)) {
              splitMessage = message.split(r);
              num = splitMessage[1];
              task = $('#unassigned p[data-num="' + num + '"]');
              console.log(task);
              if (task.length !== 0) {
                taskDesc = $(task).data('task');
                task.remove();
                $('.pane[data-username="' + user + '"]').append(task);
                add_to_chat(user + ' started task: "' + taskDesc + '"', 'startedtask');
              } else {
                break;
              }
              return;
            }
          }
          _ref2 = [/^finished*\W/, /^[f]*\W/];
          for (_k = 0, _len2 = _ref2.length; _k < _len2; _k++) {
            r = _ref2[_k];
            if (message.match(r)) {
              splitMessage = message.split(r);
              num = splitMessage[1];
              task = $('.pane[data-username="' + user + '"] p[data-num="' + num + '"]');
              $(task).addClass('complete');
              if (task.length !== 0) {
                taskDesc = $(task).data('task');
                task.remove();
                $('.pane[data-username="' + user + '"]').append(task);
                add_to_chat(user + ' finished task: "' + taskDesc + '"', 'finishedtask');
              } else {
                break;
              }
              return;
            }
          }
          add_to_chat(event.object.user + ": " + event.object.message);
          chatBox.value += event.object.user + ": " + event.object.message + "\n";
        }
        if (name === "users") {
          add_pane(event.object.new_user);
          return add_to_chat(event.object.new_user + " joined the chat", 'joined');
        }
      }
    };
    return new IMO.Channel(client);
  };

  getUrlVars = function() {
    var parts, vars;
    vars = {};
    parts = window.location.href.replace(/[?&]+([^=&]+)=([^&]*)/g, function(m, key, value) {
      return vars[key] = value;
    });
    return vars;
  };

  add_to_chat = function(text, style) {
    var p;
    p = $(document.createElement("p")).text(text).addClass(style);
    $(chatBox).append(p);
    $("#chatbox").prop("scrollHeight");
    return chatBox.scrollTop = chatBox.scrollHeight;
  };

  $(function() {
    var firstpart, urlvars;
    nameForm = document.getElementById("name_form");
    nameInput = document.getElementById("name_input");
    connectButton = document.getElementById("connect_button");
    nameForm.onsubmit = on_submit_name;
    messageForm = document.getElementById("message_form");
    messageInput = document.getElementById("message_input");
    sendButton = document.getElementById("send_button");
    messageForm.onsubmit = on_send_message;
    chatBox = document.getElementById("chatbox");
    urlvars = getUrlVars();
    firstpart = urlvars['ch_id'].split('#');
    $('.group').text(firstpart[0].split('-')[1]);
    console.log(firstpart[0].split('-')[1]);
    return channel = connect();
  });

}).call(this);
